// Mocks generated by Mockito 5.4.4 from annotations
// in mad_test_work/test/src/find_tickets/data/repository/tickets_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mad_test_work/api/tickets_api.dart' as _i5;
import 'package:mad_test_work/src/find_tickets/data/model/recommended_offer_dto.dart'
    as _i7;
import 'package:mad_test_work/src/find_tickets/data/model/requested_offer_dto.dart'
    as _i8;
import 'package:mad_test_work/src/find_tickets/data/model/ticket_dto.dart'
    as _i4;
import 'package:mad_test_work/src/find_tickets/domain/converters/ticket_converter.dart'
    as _i3;
import 'package:mad_test_work/src/find_tickets/domain/entities/ticket_entity.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTicketEntity_0 extends _i1.SmartFake implements _i2.TicketEntity {
  _FakeTicketEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TicketConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockTicketConverter extends _i1.Mock implements _i3.TicketConverter {
  MockTicketConverter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TicketEntity convert(_i4.TicketDTO? input) => (super.noSuchMethod(
        Invocation.method(
          #convert,
          [input],
        ),
        returnValue: _FakeTicketEntity_0(
          this,
          Invocation.method(
            #convert,
            [input],
          ),
        ),
      ) as _i2.TicketEntity);

  @override
  Iterable<_i2.TicketEntity> convertMultiple(
          Iterable<_i4.TicketDTO>? inputList) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertMultiple,
          [inputList],
        ),
        returnValue: <_i2.TicketEntity>[],
      ) as Iterable<_i2.TicketEntity>);
}

/// A class which mocks [ITicketsApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockITicketsApi extends _i1.Mock implements _i5.ITicketsApi {
  MockITicketsApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i4.TicketDTO>> getTickets([String? format = r'json']) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTickets,
          [format],
        ),
        returnValue: _i6.Future<List<_i4.TicketDTO>>.value(<_i4.TicketDTO>[]),
      ) as _i6.Future<List<_i4.TicketDTO>>);

  @override
  _i6.Future<List<_i7.RecommendedOfferDTO>> getRecommendedTickets(
          [String? format = r'json']) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedTickets,
          [format],
        ),
        returnValue: _i6.Future<List<_i7.RecommendedOfferDTO>>.value(
            <_i7.RecommendedOfferDTO>[]),
      ) as _i6.Future<List<_i7.RecommendedOfferDTO>>);

  @override
  _i6.Future<List<_i8.RequestedOfferDTO>> getRequestedTickets(
          [String? format = r'json']) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequestedTickets,
          [format],
        ),
        returnValue: _i6.Future<List<_i8.RequestedOfferDTO>>.value(
            <_i8.RequestedOfferDTO>[]),
      ) as _i6.Future<List<_i8.RequestedOfferDTO>>);
}
