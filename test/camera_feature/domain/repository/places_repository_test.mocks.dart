// Mocks generated by Mockito 5.4.4 from annotations
// in mad_test_work/test/camera_feature/domain/repository/places_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mad_test_work/src/camera_feature/data/data_source/local_data_source/places_data_source_local_interface.dart'
    as _i2;
import 'package:mad_test_work/src/camera_feature/data/data_source/remote_data_source/places_data_source_remote_interface.dart'
    as _i5;
import 'package:mad_test_work/src/camera_feature/domain/place/place_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IPlacesDataSourceLocal].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPlacesDataSourceLocal extends _i1.Mock
    implements _i2.IPlacesDataSourceLocal {
  MockIPlacesDataSourceLocal() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PlaceModel>> getPlaces() => (super.noSuchMethod(
        Invocation.method(
          #getPlaces,
          [],
        ),
        returnValue: _i3.Future<List<_i4.PlaceModel>>.value(<_i4.PlaceModel>[]),
      ) as _i3.Future<List<_i4.PlaceModel>>);
}

/// A class which mocks [IPlacesDataSourceRemote].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPlacesDataSourceRemote extends _i1.Mock
    implements _i5.IPlacesDataSourceRemote {
  MockIPlacesDataSourceRemote() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PlaceModel>> getPlaces() => (super.noSuchMethod(
        Invocation.method(
          #getPlaces,
          [],
        ),
        returnValue: _i3.Future<List<_i4.PlaceModel>>.value(<_i4.PlaceModel>[]),
      ) as _i3.Future<List<_i4.PlaceModel>>);
}
